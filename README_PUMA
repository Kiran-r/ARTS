Instructions for installing and running the ARTS RTS on the PUMA cluster
========================================================================

INSTALLATION
++++++++++++

Make sure that you have gcc and cmake loaded in your environment:

$ module load gcc/5.2.0 cmake/3.3.0

OBTAIN THE SOURCE CODE
++++++++++++++++++++++

Clone the source repo:

$ git clone https://<username>@stash.pnnl.gov/scm/haggle/arts.git

where the <username> is your login name to the system. This will create a folder called "arts".

COMPILE
+++++++

Enter to the arts folder:

$ cd arts

Create a build folder and use cmake to build the system:

$ mkdir build; cd build; cmake ../

If everything goes well, you should have the binaries under the build folder.

TESTING
+++++++

Copy from the sampleConfigs the arts_puma.cfg to the build/test folder:

$ cp arts/sampleConfigs/arts_puma.cfg arts/build/examples/arts.cfg

Afterwards, you can run the test files by using srun (4 nodes 20 worker threads):

$ srun -N 4 -n 4 -c 20 -p compute ./fib 32

You can change the number of worker threads using -c on command line or 
change the number of worker threads and network threads in the configure file.
A configure file named arts.cfg located in the CWD is required to run.

The output should read: 

[0] Using Slurm
[0] Fib 32: 2178309 1

KNOWN PROBLEMS
++++++++++++++

- In PUMA, you should not run across the partition names since it can only run across nodes with the same prefix (pphi01, pphi02, pphi03, ... or pnode01, pnode02, pnode03, ..., but not across).
- There is a rare instance in which the RTS does not end cleanly. This is normal since the application finishes normal (output is produced correctly).

DOCUMENTATION
+++++++++++++
Look at arts.h and artsRT.h